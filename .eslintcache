[{"E:\\documents\\React-Project\\form-input-practice\\01-starting-project\\src\\index.js":"1","E:\\documents\\React-Project\\form-input-practice\\01-starting-project\\src\\App.js":"2","E:\\documents\\React-Project\\form-input-practice\\01-starting-project\\src\\components\\SimpleInput.js":"3","E:\\documents\\React-Project\\form-input-practice\\01-starting-project\\src\\hooks\\use-Input.js":"4","E:\\documents\\React-Project\\form-input-practice\\01-starting-project\\src\\components\\BasicForm.js":"5","E:\\documents\\React-Project\\form-input-practice\\01-starting-project\\src\\hooks\\use-basic-input.js":"6"},{"size":142,"mtime":1616567086000,"results":"7","hashOfConfig":"8"},{"size":213,"mtime":1642935969362,"results":"9","hashOfConfig":"8"},{"size":2144,"mtime":1642926415279,"results":"10","hashOfConfig":"8"},{"size":748,"mtime":1642925966936,"results":"11","hashOfConfig":"8"},{"size":2737,"mtime":1642941003804,"results":"12","hashOfConfig":"8"},{"size":768,"mtime":1642936200549,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"8ekvpf",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\documents\\React-Project\\form-input-practice\\01-starting-project\\src\\index.js",[],["28","29"],"E:\\documents\\React-Project\\form-input-practice\\01-starting-project\\src\\App.js",["30"],"E:\\documents\\React-Project\\form-input-practice\\01-starting-project\\src\\components\\SimpleInput.js",["31","32"],"import { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/use-Input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    isValid: nameIsValid,\n    isInValid: nameIsInvalid,\n    enteredInputHandler: enteredNameHandler,\n    enteredInputBlurHandler: enteredNameBlurHandler,\n    reset: nameReset,\n  } = useInput((input) => input.trim() !== \"\");\n  const nameInputStyle = nameIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const {\n    value : enteredEmail,\n    isValid : emailIsValid,\n    isInValid : emailIsInValid,\n    enteredInputHandler : enteredEmailHandler,\n    enteredInputBlurHandler : enteredEmailBlurHandler,\n    reset : emailReset,\n  } = useInput((input) => input.trim() !== \"\" && input.includes(\"@\"));\n\n  const emailInputStyle = emailIsInValid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  let formIsValid = false;\n\n  if (nameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    if (!nameIsValid) {\n      return;\n    }\n    console.log({\n      name: enteredName,\n      email: enteredEmail,\n    });\n    nameReset();\n    emailReset();\n  };\n  \n  return (\n    <form onSubmit={onSubmitHandler}>\n      <div className={nameInputStyle}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          value={enteredName}\n          type=\"text\"\n          id=\"name\"\n          onChange={enteredNameHandler}\n          onBlur={enteredNameBlurHandler}\n        />\n        {nameIsInvalid && (\n          <div className=\"error-text\">You can't submit blank!</div>\n        )}\n      </div>\n      <div className={emailInputStyle}>\n        <label htmlFor=\"name\">Your E-Mail</label>\n        <input\n          value={enteredEmail}\n          type=\"email\"\n          id=\"email\"\n          onChange={enteredEmailHandler}\n          onBlur={enteredEmailBlurHandler}\n        />\n        {emailIsInValid && <div className=\"error-text\">This isn't E-Mail!</div>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n","E:\\documents\\React-Project\\form-input-practice\\01-starting-project\\src\\hooks\\use-Input.js",[],"E:\\documents\\React-Project\\form-input-practice\\01-starting-project\\src\\components\\BasicForm.js",["33","34","35"],"E:\\documents\\React-Project\\form-input-practice\\01-starting-project\\src\\hooks\\use-basic-input.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":8,"nodeType":"42","messageId":"43","endLine":1,"endColumn":19},{"ruleId":"40","severity":1,"message":"44","line":1,"column":10,"nodeType":"42","messageId":"43","endLine":1,"endColumn":19},{"ruleId":"40","severity":1,"message":"45","line":1,"column":21,"nodeType":"42","messageId":"43","endLine":1,"endColumn":29},{"ruleId":"40","severity":1,"message":"45","line":1,"column":10,"nodeType":"42","messageId":"43","endLine":1,"endColumn":18},{"ruleId":"40","severity":1,"message":"46","line":22,"column":14,"nodeType":"42","messageId":"43","endLine":22,"endColumn":29},{"ruleId":"40","severity":1,"message":"47","line":26,"column":12,"nodeType":"42","messageId":"43","endLine":26,"endColumn":25},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'SimpleInput' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'lastNameIsValid' is assigned a value but never used.","'lastNameReset' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]